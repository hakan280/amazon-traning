spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST_FOR_ORDER_SERVICE:localhost}:${DB_PORT:5432}/${POSTGRES_DB_FOR_ORDER_SERVICE:order-service}
spring.datasource.username= ${POSTGRES_USER_FOR_ORDER_SERVICE:linovi}
spring.datasource.password= ${POSTGRES_PASSWORD_FOR_ORDER_SERVICE:secret}

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = create

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.jpa.show-sql=true


# logs the SQL statements
#logging.level.org.hibernate.SQL=DEBUG
# Logs the JDBC parameters passed to a query
#logging.level.org.hibernate.type=TRACE

amazon.access.key = x
amazon.secret.key = x
amazon.region= elasticmq

amazon.sqs.queue.name = process-queue

amazon.sqs.base.url = http://localhost:9324
amazon.sqs.queue.url = http://localhost:9324/queue/process-queue
